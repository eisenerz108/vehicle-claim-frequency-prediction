{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1lhVt0c5JRgG5nhzV9_BlyLUcTR2Pf21k","authorship_tag":"ABX9TyMQYc7Zu4Rzo+5Mgl4PtYoH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":32,"metadata":{"id":"vCnlInZqflz-","executionInfo":{"status":"ok","timestamp":1736609660584,"user_tz":-60,"elapsed":1455,"user":{"displayName":"Aman Jain","userId":"10587085597819974522"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["data = pd.read_csv(\"/content/drive/MyDrive/hedvig/data/processed/cleaned_data.csv\")\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"q-WMsOx8fuMj","executionInfo":{"status":"ok","timestamp":1736609660925,"user_tz":-60,"elapsed":344,"user":{"displayName":"Aman Jain","userId":"10587085597819974522"}},"outputId":"269c60c1-b52c-4bc5-a3e6-524c9d0d7235"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   owner_age  owner_gender  geo_zone  vehicle_classification  vehicle_age  \\\n","0          0             1         1                       4           12   \n","1          5             0         3                       3           18   \n","2          5             0         4                       1           25   \n","3          6             0         2                       1           26   \n","4          9             0         3                       3            8   \n","\n","   duration  n_claims  claim_cost  \n","0  0.175342         0           0  \n","1  0.454795         0           0  \n","2  0.172603         0           0  \n","3  0.180822         0           0  \n","4  0.542466         0           0  "],"text/html":["\n","  <div id=\"df-a7efef2c-cf06-4035-8adf-5dbca1659eba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>owner_age</th>\n","      <th>owner_gender</th>\n","      <th>geo_zone</th>\n","      <th>vehicle_classification</th>\n","      <th>vehicle_age</th>\n","      <th>duration</th>\n","      <th>n_claims</th>\n","      <th>claim_cost</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>12</td>\n","      <td>0.175342</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>18</td>\n","      <td>0.454795</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>0.172603</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>0.180822</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0.542466</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7efef2c-cf06-4035-8adf-5dbca1659eba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7efef2c-cf06-4035-8adf-5dbca1659eba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7efef2c-cf06-4035-8adf-5dbca1659eba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-14eb41b6-4616-465f-8b79-4f8a316ec5fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-14eb41b6-4616-465f-8b79-4f8a316ec5fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-14eb41b6-4616-465f-8b79-4f8a316ec5fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 61347,\n  \"fields\": [\n    {\n      \"column\": \"owner_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 0,\n        \"max\": 92,\n        \"num_unique_values\": 83,\n        \"samples\": [\n          36,\n          0,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"owner_gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geo_zone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vehicle_classification\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vehicle_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          72,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3270351025658413,\n        \"min\": 0.00274,\n        \"max\": 31.33973,\n        \"num_unique_values\": 2576,\n        \"samples\": [\n          1.789041,\n          1.989041\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"n_claims\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"claim_cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3279,\n        \"min\": 0,\n        \"max\": 95750,\n        \"num_unique_values\": 581,\n        \"samples\": [\n          12707,\n          3609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"awF9zywwgVGv","executionInfo":{"status":"ok","timestamp":1736609660925,"user_tz":-60,"elapsed":3,"user":{"displayName":"Aman Jain","userId":"10587085597819974522"}},"outputId":"1145e90f-ebf0-404a-f587-a53162303f62"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 61347 entries, 0 to 61346\n","Data columns (total 8 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   owner_age               61347 non-null  int64  \n"," 1   owner_gender            61347 non-null  int64  \n"," 2   geo_zone                61347 non-null  int64  \n"," 3   vehicle_classification  61347 non-null  int64  \n"," 4   vehicle_age             61347 non-null  int64  \n"," 5   duration                61347 non-null  float64\n"," 6   n_claims                61347 non-null  int64  \n"," 7   claim_cost              61347 non-null  int64  \n","dtypes: float64(1), int64(7)\n","memory usage: 3.7 MB\n"]}]},{"cell_type":"code","source":["data['claim_frequency'] = data['n_claims'] / data['duration']\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ajTSm9Lfgk71","executionInfo":{"status":"ok","timestamp":1736609662938,"user_tz":-60,"elapsed":4,"user":{"displayName":"Aman Jain","userId":"10587085597819974522"}},"outputId":"a2455271-ed73-46a5-ea8d-23f960973548"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   owner_age  owner_gender  geo_zone  vehicle_classification  vehicle_age  \\\n","0          0             1         1                       4           12   \n","1          5             0         3                       3           18   \n","2          5             0         4                       1           25   \n","3          6             0         2                       1           26   \n","4          9             0         3                       3            8   \n","\n","   duration  n_claims  claim_cost  claim_frequency  \n","0  0.175342         0           0              0.0  \n","1  0.454795         0           0              0.0  \n","2  0.172603         0           0              0.0  \n","3  0.180822         0           0              0.0  \n","4  0.542466         0           0              0.0  "],"text/html":["\n","  <div id=\"df-e5858736-7b9d-47a4-97d3-fd51a18a6470\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>owner_age</th>\n","      <th>owner_gender</th>\n","      <th>geo_zone</th>\n","      <th>vehicle_classification</th>\n","      <th>vehicle_age</th>\n","      <th>duration</th>\n","      <th>n_claims</th>\n","      <th>claim_cost</th>\n","      <th>claim_frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>12</td>\n","      <td>0.175342</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>18</td>\n","      <td>0.454795</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>0.172603</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>0.180822</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0.542466</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5858736-7b9d-47a4-97d3-fd51a18a6470')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5858736-7b9d-47a4-97d3-fd51a18a6470 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5858736-7b9d-47a4-97d3-fd51a18a6470');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2298f3ce-cf3e-4c3e-8beb-b3e46b611416\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2298f3ce-cf3e-4c3e-8beb-b3e46b611416')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2298f3ce-cf3e-4c3e-8beb-b3e46b611416 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 61347,\n  \"fields\": [\n    {\n      \"column\": \"owner_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 0,\n        \"max\": 92,\n        \"num_unique_values\": 83,\n        \"samples\": [\n          36,\n          0,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"owner_gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geo_zone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vehicle_classification\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vehicle_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          72,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3270351025658413,\n        \"min\": 0.00274,\n        \"max\": 31.33973,\n        \"num_unique_values\": 2576,\n        \"samples\": [\n          1.789041,\n          1.989041\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"n_claims\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"claim_cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3279,\n        \"min\": 0,\n        \"max\": 95750,\n        \"num_unique_values\": 581,\n        \"samples\": [\n          12707,\n          3609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"claim_frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9642133104322226,\n        \"min\": 0.0,\n        \"max\": 182.5150574922431,\n        \"num_unique_values\": 454,\n        \"samples\": [\n          0.12551582296394823,\n          1.1094223237959995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.boxplot(x=data['claim_frequency'], color='orange')\n","plt.title('Boxplot of Claim Frequency (With Outliers)')\n","plt.xlabel('Claim Frequency')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"yucGOiyUs-5s","executionInfo":{"status":"ok","timestamp":1736609668303,"user_tz":-60,"elapsed":1548,"user":{"displayName":"Aman Jain","userId":"10587085597819974522"}},"outputId":"ef99bf68-e9f2-4588-fc0d-420ef100dafb"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA7oAAAIjCAYAAAAtGmdSAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAQ8JJREFUeJzt3XeUVeXZP+77MDADDHWkK0VBAbFgUPmKohKNiL1gL2Av2LCEaGLAxCRWNJoEXb4RjKiJPW9M7BKNSNTYEkUQkWIsQEQ60mb//vA35+UwAwyIDDy5rrXOmnP2fvbe925z5jO75bIsywIAAAASUaumCwAAAIANSdAFAAAgKYIuAAAASRF0AQAASIqgCwAAQFIEXQAAAJIi6AIAAJAUQRcAAICkCLoAAAAkRdAF+JblcrkYNmxYTZdR4PXXX49evXpFaWlp5HK5ePvttzfIePfdd9/Yd99912vYTXE58c0tWLAgWrRoEffdd98GG+eoUaMil8vF1KlTq932H//4xwab/sYwbNiwyOVyBd06dOgQAwcO3Oi13HHHHdGuXbtYsmTJRp82wPoSdIHNVsUfsCu/WrRoEX369Iknn3yypsv7xsaPHx/Dhg2r1h/z62LZsmVxzDHHxOzZs+OWW26Je++9N9q3b7/GYWbMmBGXX355dOnSJerXrx+lpaXRo0ePuPbaa2POnDkbtL5vW4cOHSptNxWvr776qqbLS84vf/nLaNiwYRx//PEREXHDDTdELpeLt956q6BdlmXRtGnTyOVyMWXKlIJ+X331VZSUlMSJJ5642un85je/iVGjRm3w+iuMHTs2jjzyyGjZsmWUlJREhw4d4pxzzonp06ev9zgXLVoUw4YNi7/+9a8brtBvwcCBA2Pp0qVx55131nQpANVWu6YLAPimfvKTn8TWW28dWZbFjBkzYtSoUXHQQQfFn/70pzjkkENqurz1Nn78+Ljmmmti3333jQ4dOmyw8U6ePDmmTZsWd911V5x55plrbf/666/HQQcdFAsWLIiTTz45evToERER//jHP+K6666Ll156KZ555plvXNfixYujdu2N87XUvXv3uOyyyyp1Ly4u3ijT/2+xbNmy+OUvfxmDBw+OoqKiiIjYa6+9IiLi5Zdfjl122SXf9r333os5c+ZE7dq1Y+zYsbH11lvn+73++uuxdOnS/LCnnHJKHH/88VFSUpJv85vf/CaaNWv2rRzxvP322+Piiy+ObbbZJi688MJo3bp1vP/++/E///M/8Yc//CH+8pe/RK9evdZ5vIsWLYprrrkmIqJaZ0JMnDgxatXa+Mco6tatGwMGDIjhw4fHhRdeWOlIM8CmSNAFNnv9+vWLXXfdNf/5jDPOiJYtW8YDDzywWQfdb8vMmTMjIqJJkyZrbTtnzpw48sgjo6ioKN56663o0qVLQf+f/exncdddd22QuurWrbtBxlMdW265ZZx88snVbr9o0aKoX7/+t1hRmp544omYNWtWHHvssfluu+66a9StWzdefvnluPDCC/Pdx44dG1tssUXsuuuu8fLLLxesn5dffjki/i8kFxUV5YPzt23s2LFxySWXxF577RVPPfVUwXZw3nnnxZ577hn9+/eP9957L5o2bfqt1rJysP+mli9fHuXl5dX+586xxx4bN9xwQ4wZMya++93vbrA6AL4tTl0GktOkSZOoV69epaODCxcujMsuuyzatm0bJSUl0blz57jpppsiy7KI+PqIYpcuXaJLly6xePHi/HCzZ8+O1q1bR69evWLFihUR8fWpfA0aNIiPPvoo+vbtG6WlpdGmTZv4yU9+kh/fmrz11lvRr1+/aNSoUTRo0CD222+/+Pvf/57vP2rUqDjmmGMiIqJPnz75U2vXdorjCy+8EL17947S0tJo0qRJHH744fH+++/n+w8cODD22WefiIg45phjIpfLrfFI0p133hmffPJJDB8+vFLIjYho2bJl/OhHP1rt8EuXLo0f//jH0aNHj2jcuHGUlpZG7969Y8yYMZXarnqNbsU1ih988EGcfPLJ0bhx42jevHlcffXVkWVZfPzxx3H44YdHo0aNolWrVnHzzTevcdlU17777hs77LBDvPHGG7H33ntH/fr146qrroqIiCVLlsTQoUOjU6dOUVJSEm3bto3vf//7la5dXLJkSQwePDiaN28eDRs2jMMOOyz+/e9/V5rHgQMHVnm0vqrrMyMiRo8eHT169Ih69epFWVlZHH/88fHxxx9XWf/48eOjT58+Ub9+/dhyyy3jhhtuqDS+r776KoYNGxbbbbdd1K1bN1q3bh1HHXVUTJ48ObIsiw4dOsThhx9e5XCNGzeOc845Z43L8vHHH48OHTpEx44d892Ki4tjt912i7Fjxxa0HTt2bOyxxx6x5557VtmvSZMmscMOO0RE5Wt0O3ToEO+99168+OKL+X1l1e16yZIlcemll0bz5s2jtLQ0jjzyyJg1a9Ya64+I+OlPfxq5XC7uueeeSv/s6NixY9xwww3x2WefFZzWu7pr1Vde31OnTo3mzZtHRMQ111yTr3tN16lXdY3unDlz4pJLLsn/XuvUqVNcf/31UV5enm8zderUyOVycdNNN8Wtt94aHTt2jJKSkhg/fnxEfH3Eulu3blG/fv1o2rRp7LrrrnH//fcXTKdHjx5RVlYWf/zjH9e2yAA2CYIusNmbO3du/Oc//4lZs2bFe++9F+edd17+NNsKWZbFYYcdFrfccksceOCBMXz48OjcuXNcccUVcemll0ZERL169eKee+6JDz/8MH74wx/mhx00aFDMnTs3Ro0aVXAUacWKFXHggQdGy5Yt44YbbogePXrE0KFDY+jQoWus97333ovevXvHO++8E9///vfj6quvjilTpsS+++4br776akRE7L333nHRRRdFRMRVV10V9957b9x7773RtWvX1Y73ueeei759+8bMmTNj2LBhcemll8Yrr7wSe+65Zz4QnHPOOfnQdtFFF8W9995bMK+r+t///d+oV69e9O/ff43ztDrz5s2L//mf/4l99903rr/++hg2bFjMmjUr+vbtW+0bYB133HFRXl4e1113XfTs2TOuvfbauPXWW+N73/tebLnllnH99ddHp06d4vLLL4+XXnqpWuNctmxZ/Oc//yl4LVq0KN//iy++iH79+kX37t3j1ltvjT59+kR5eXkcdthhcdNNN8Whhx4at99+exxxxBFxyy23xHHHHVcw/jPPPDNuvfXWOOCAA+K6666LOnXqxMEHH1zt5VaVn/3sZ3HqqafGtttuG8OHD49LLrkknn/++dh7770rXSf95ZdfxoEHHhg777xz3HzzzdGlS5cYMmRIwbXrK1asiEMOOSSuueaa6NGjR9x8881x8cUXx9y5c+Pdd9+NXC4XJ598cjz55JMxe/bsgvH/6U9/innz5q31qPgrr7wS3/nOdyp132uvveKTTz4puP587Nix0atXr+jVq1f+NOaIr/fdV155JfbYY4/VnrZ76623xlZbbRVdunTJ7yurbtcXXnhhvPPOOzF06NA477zz4k9/+lNccMEFa6x/0aJF8fzzz0fv3r0LTqVe2XHHHRclJSXxxBNPrHFcq2revHmMGDEiIiKOPPLIfN1HHXVUtcexaNGi2GeffWL06NFx6qmnxm233RZ77rlnXHnllfnfaysbOXJk3H777XH22WfHzTffHGVlZXHXXXfFRRddFNtvv33ceuutcc0110T37t3zv4tW9p3vfKfSPyEANlkZwGZq5MiRWURUepWUlGSjRo0qaPv4449nEZFde+21Bd379++f5XK57MMPP8x3u/LKK7NatWplL730UvbQQw9lEZHdeuutBcMNGDAgi4jswgsvzHcrLy/PDj744Ky4uDibNWtWvntEZEOHDs1/PuKII7Li4uJs8uTJ+W6ffvpp1rBhw2zvvffOd6uY9pgxY6q1PLp37561aNEi++KLL/Ld3nnnnaxWrVrZqaeemu82ZsyYLCKyhx56aK3jbNq0abbzzjtXa/pZlmX77LNPts8+++Q/L1++PFuyZElBmy+//DJr2bJldvrppxd0X3U5DR06NIuI7Oyzzy4Y31ZbbZXlcrnsuuuuKxhnvXr1sgEDBqy1xvbt21e53VRMe5999skiIrvjjjsKhrv33nuzWrVqZX/7298Kut9xxx1ZRGRjx47NsizL3n777SwisvPPP7+g3YknnlhpHgcMGJC1b9++Uo0V815h6tSpWVFRUfazn/2soN2//vWvrHbt2gXdK+r/3e9+l++2ZMmSrFWrVtnRRx+d73b33XdnEZENHz680vTLy8uzLMuyiRMnZhGRjRgxoqD/YYcdlnXo0CHfrirLli3Lcrlcdtlll1Xq9+c//zmLiOzee+/NsizLPvvssywishdffDGbP39+VlRUlP35z3/OsizL3n333SwiCuaxYt+fMmVKvlu3bt0Ktr1V2+6///4F9Q4ePDgrKirK5syZs9p5qFiXF1988WrbZFmW7bTTTllZWVn+86r7QYVV1/esWbMqbRMVVt0GsuzrbXflbfynP/1pVlpamn3wwQcF7X7wgx9kRUVF2fTp07Msy7IpU6ZkEZE1atQomzlzZkHbww8/POvWrdsa56/C2WefndWrV69abQFqmiO6wGbv17/+dTz77LPx7LPPxujRo6NPnz5x5plnxqOPPppv85e//CWKioryR0krXHbZZZFlWcGRrmHDhkW3bt1iwIABcf7558c+++xTabgKKx8RyuVyccEFF8TSpUvjueeeq7L9ihUr4plnnokjjjgittlmm3z31q1bx4knnhgvv/xyzJs3b52XwWeffRZvv/12DBw4MMrKyvLdd9ppp/je974Xf/nLX9Z5nBFfH5Ft2LDheg0b8fW1lBXXAJaXl8fs2bNj+fLlseuuu8abb75ZrXGsfMOsoqKi2HXXXSPLsjjjjDPy3Zs0aRKdO3eOjz76qFrj7NmzZ36bqXideuqp+f4lJSVx2mmnFQzz0EMPRdeuXaNLly4FR4IrrlesOB27Ylmvus1ccskl1aqtKo8++miUl5fHscceWzDtVq1axbbbblvpVPAGDRoUHG0tLi6O3XffvWD5PPLII9GsWbOC62QrVJw2vd1220XPnj0LHg00e/bsePLJJ+Okk05a402JZs+enb+T8qp69eoVtWrVyl97O3bs2KhTp07stttu0aBBg9hpp53yRw4rflZcn7u+zj777IJ6e/fuHStWrIhp06atdpj58+dHRKx1H2jYsOF67bff1EMPPRS9e/eOpk2bFmwX+++/f6xYsaLSGQ5HH310/nTpCk2aNIl///vf8frrr691ek2bNo3FixcXnP0AsKlyMypgs7f77rsX3IzqhBNOiF122SUuuOCCOOSQQ6K4uDimTZsWbdq0qfQHa8WpwCv/sVtcXBx333137LbbblG3bt0YOXJklX/Q16pVqyCsRnwdDCJitY8EmjVrVixatCg6d+5cqV/Xrl2jvLw8Pv744+jWrVv1Zv7/V1H/6sb79NNPx8KFC6O0tHSdxtuoUaP8H/vr65577ombb745JkyYEMuWLct3X92poKtq165dwefGjRtH3bp1o1mzZpW6f/HFF9UaZ7NmzWL//fdfbf8tt9yy0k16Jk2aFO+//36loFCh4iZf06ZNi1q1ahVclxpR9bqprkmTJkWWZbHttttW2b9OnToFn7faaqtK22zTpk3jn//8Z/7z5MmTo3Pnzmu90/Wpp54aF1xwQUybNi3at28fDz30UCxbtixOOeWUatWeVXHNepMmTaJbt24FYXaXXXaJevXqRcTXQXjlfhVB/ZtYdTuqCOBffvnlaoep+H2xtn1g/vz53+gfQutr0qRJ8c9//nOt22SFqva5IUOGxHPPPRe77757dOrUKQ444IA48cQTY88996zUtmJduusysDkQdIHk1KpVK/r06RO//OUvY9KkSescGiMinn766Yj4+qY7kyZNqnYoS02XLl3i7bffjqVLl67Xo3dGjx4dAwcOjCOOOCKuuOKKaNGiRRQVFcUvfvGLmDx5crXGUdXddVd3x92qQtX6qAhcKysvL48dd9wxhg8fXuUwbdu2XefprC4wVNz0bOVp53K5ePLJJ6uc9wYNGhR83pDL5/jjj4/BgwfHfffdF1dddVWMHj06dt1117UG97KyssjlcqsNknvttVfccccdMWfOnPz1uRV69eoVd999dyxbtixefvnl6NGjxze+K/f6LJNOnTpF7dq1C/5BsKolS5bExIkTC/7Zlsvlqhzvquv1myovL4/vfe978f3vf7/K/hX/eKtQ1XbdtWvXmDhxYjzxxBPx1FNPxSOPPBK/+c1v4sc//nH+0UcVvvzyy6hfv36V4wHY1Ai6QJKWL18eERELFiyIiIj27dvHc889V+nIy4QJE/L9K/zzn/+Mn/zkJ3HaaafF22+/HWeeeWb861//isaNGxdMo7y8PD766KOCPyY/+OCDiIjVPve2efPmUb9+/Zg4cWKlfhMmTIhatWrlA9O6HDWpqH91423WrNk6H82NiDj00ENj3Lhx8cgjj8QJJ5ywzsM//PDDsc0228Sjjz5aMD9ru2HXpqhjx47xzjvvxH777bfGddO+ffsoLy/PHzGtUNW6adq0aaUbSUVEpdNpO3bsGFmWxdZbb10pvKyvjh07xquvvhrLli2rdER4ZWVlZXHwwQfHfffdFyeddFKMHTs2br311rWOv3bt2tGxY8eYMmVKlf332muvGDFiRDz33HPx1ltvxRVXXJHv16tXr1i8eHH8+c9/jo8++iiOPvrotU7v2zjKWFpaGn369IkXXnghf0R7VQ8++GAsWbKk4FFmTZs2rfI0+lXX6zetuWPHjrFgwYI1np1QHaWlpXHcccfFcccdF0uXLo2jjjoqfvazn8WVV15Z8A+GKVOmrPGGeACbEtfoAslZtmxZPPPMM1FcXJz/o+yggw6KFStWxK9+9auCtrfcckvkcrno169fftiBAwdGmzZt4pe//GWMGjUqZsyYEYMHD65yWiuPL8uy+NWvfhV16tSJ/fbbr8r2RUVFccABB8Qf//jHgtObZ8yYEffff3/stdde0ahRo4iIfDCtKgitqnXr1tG9e/e45557Ctq/++678cwzz8RBBx201nFU5dxzz43WrVvHZZddlg/xK5s5c2Zce+21qx2+4ijayke3Xn311Rg3btx61VOTjj322Pjkk0+qfG7w4sWLY+HChRER+W3ptttuK2hTVTjs2LFjzJ07t+CI4WeffRaPPfZYQbujjjoqioqK4pprrql0pDDLsmqfsr2yo48+Ov7zn/9U2icqxrmyU045JcaPHx9XXHFFFBUVxfHHH1+taeyxxx7xj3/8o8p+FdfcDh8+PJYtW1ZwRLdDhw7RunXr/CORqnN9bmlpabX2lXX1ox/9KLIsi4EDBxY8dizi6+D3/e9/P1q3bl3wqKWOHTvGhAkTCh5f9M4771S6Y3HF44rWt+5jjz02xo0blz8DZWVz5szJ/8NvTVbddoqLi2P77bePLMsKLjWIiHjzzTcL1hPApswRXWCz9+STT+aPzM6cOTPuv//+mDRpUvzgBz/Ih8ZDDz00+vTpEz/84Q9j6tSpsfPOO8czzzwTf/zjH+OSSy7JX0957bXXxttvvx3PP/98NGzYMHbaaaf48Y9/HD/60Y+if//+BYGxbt268dRTT8WAAQOiZ8+e8eSTT8af//znuOqqq1Z7zVzFNJ599tnYa6+94vzzz4/atWvHnXfeGUuWLCl41mn37t2jqKgorr/++pg7d26UlJTEd7/73WjRokWV473xxhujX79+sccee8QZZ5wRixcvjttvvz0aN268xmdzrknTpk3jsccei4MOOii6d+8eJ598cvTo0SMivv6j94EHHog99thjtcMfcsgh8eijj8aRRx4ZBx98cEyZMiXuuOOO2H777fNH2zcXp5xySjz44INx7rnnxpgxY2LPPfeMFStWxIQJE+LBBx+Mp59+Onbdddfo3r17nHDCCfGb3/wm5s6dG7169Yrnn38+Pvzww0rjPP7442PIkCFx5JFHxkUXXRSLFi2KESNGxHbbbVdws66OHTvGtddeG1deeWVMnTo1jjjiiGjYsGFMmTIlHnvssTj77LPj8ssvX6f5OfXUU+N3v/tdXHrppfHaa69F7969Y+HChfHcc8/F+eefX/D83IMPPji22GKLeOihh6Jfv36r3QZXdfjhh8e9994bH3zwQaUj0e3atYu2bdvGuHHjokOHDtGmTZuC/r169YpHHnkkcrlcldeLrqpHjx4xYsSIuPbaa6NTp07RokWL/I3Cvom99947brrpprj00ktjp512ioEDB0br1q1jwoQJcdddd0V5eXn85S9/Kbjp1umnnx7Dhw+Pvn37xhlnnBEzZ86MO+64I7p161Zw06p69erF9ttvH3/4wx9iu+22i7Kysthhhx3yzwtemyuuuCL+93//Nw455JAYOHBg9OjRIxYuXBj/+te/4uGHH46pU6dWupZ9VQcccEC0atUq9txzz2jZsmW8//778atf/SoOPvjggrNf3njjjZg9e3aVz1UG2CRt7Ns8A2woVT1eqG7duln37t2zESNGVHr0yfz587PBgwdnbdq0yerUqZNtu+222Y033phv98Ybb2S1a9cueGRQln39SJvddtsta9OmTfbll19mWfb1Y0JKS0uzyZMnZwcccEBWv379rGXLltnQoUOzFStWFAwfVTw+5M0338z69u2bNWjQIKtfv37Wp0+f7JVXXqk0j3fddVe2zTbbZEVFRdV61NBzzz2X7bnnnlm9evWyRo0aZYceemg2fvz4gjbr8nihCp9++mk2ePDgbLvttsvq1q2b1a9fP+vRo0f2s5/9LJs7d26+3aqPVSkvL89+/vOfZ+3bt89KSkqyXXbZJXviiSeqfKzOqsup4vEqKz+qKcv+b9mvap999qnWY1Lat2+fHXzwwavtv6bxLF26NLv++uuzbt26ZSUlJVnTpk2zHj16ZNdcc03Bcli8eHF20UUXZVtssUVWWlqaHXroodnHH39c5bbwzDPPZDvssENWXFycde7cORs9enSVj5bJsix75JFHsr322isrLS3NSktLsy5dumSDBg3KJk6cuNb6q1rmixYtyn74wx9mW2+9dVanTp2sVatWWf/+/QsefVXh/PPPzyIiu//++1e77Fa1ZMmSrFmzZtlPf/rTKvufcMIJWURkJ554YqV+w4cPzyIi69q1a6V+VT1e6PPPP88OPvjgrGHDhllE5LfDiravv/56wTgq9oPqPr7rpZdeyg4//PCsWbNmWZ06dbJ27dplZ511VjZ16tQq248ePTrbZpttsuLi4qx79+7Z008/XeU6eOWVV7IePXpkxcXFBdtHdR4vlGVf/1678sors06dOmXFxcVZs2bNsl69emU33XRTtnTp0izL/u/xQjfeeGOlOu+8885s7733zrbYYouspKQk69ixY3bFFVcUbM9ZlmVDhgzJ2rVrt8ZHSgFsSnJZtoHu3AHwX2TgwIHx8MMPb3ZHJalZuVwuhg4dut5H2GvS4MGD47e//W18/vnn+VNuq+OnP/1pjBw5MiZNmrTaG0KxaVuyZEl06NAhfvCDH8TFF19c0+UAVItrdAGANfrqq69i9OjRcfTRR69TyI34OiAvWLAgfv/7339L1fFtGzlyZNSpUyfOPffcmi4FoNpcowsAVGnmzJnx3HPPxcMPPxxffPHFeh3Na9CgQaXnubJ5Offcc4VcYLMj6AIAVRo/fnycdNJJ0aJFi7jtttuie/fuNV0SAFSLa3QBAABIimt0AQAASIqgCwAAQFLW+xrd8vLy+PTTT6Nhw4aRy+U2ZE0AAABQSZZlMX/+/GjTpk3UqrX647brHXQ//fTTaNu27foODgAAAOvl448/jq222mq1/dc76DZs2DA/gUaNGq3vaAAAAKBa5s2bF23bts3n0dVZ76Bbcbpyo0aNBF0AAAA2mrVdPutmVAAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJST7ofvTRR3HllVfGRx99VNOlAAAAsBEkH3SnT58e7733XkyfPr2mSwEAAGAjSD7oAgAA8N9F0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACQl+aC7ePHigp8AAACkLfmgO3Xq1IKfAAAApC35oAsAAMB/F0EXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSclmWZesz4Lx586Jx48Yxd+7caNSo0Yaua4OYMWNGnHXWWRt1mm3atIlWrVrFrFmzYsGCBVG3bt3YaqutomvXrlGrVq2YMWNGREQUFxfHa6+9FnPnzo06derElltuGYsXL45cLhfNmjWL3XffPRYsWBBTpkyJxYsXR9OmTaNBgwZRVFQUO+64Y3Tt2jUmTpwYs2fPjiZNmkRExJw5c6KsrCw6d+5cZb9V222//fZRVFRUUP+KFSti/PjxMXv27NW22dBWnuaa5mV966mJeaquTbm2lW0uddYEy4Z1ZZsBYFOzOX03VTeHJht0jzjiiCgvL6/pMr41uVwuVrfqatWqVa15b9GiRZx++unRq1eviIh45ZVX4u67746ZM2euts2GVtU0V7bqvKxrPTUxT9W1Kde2ss2lzppg2bCubDMAbGo2t++m/+qgm2LIrV27dixfvrzKfttvv31kWRbvv/9+REQ0adIk5syZk+83b968+Pe//x1bbrllNG7cOMaPHx+nnHJKTJw4MV5//fUYMmRIRERcf/31sdtuu0X//v2jffv2MW3atHj44YfzbTb0hv7KK6/kp9m5c+e49957q5yXuXPnxuDBg6NVq1brVM/K499Y81Rdm3Jtm2OdNcGyYV3ZZgDY1GyO303/tUG3Jk5XXh9rOiK7qkaNGkW9evViyy23jDfffDMiInbZZZd46623oqSkJO6///6IiDjhhBMiIuJ3v/tdnHrqqRERMXr06Bg0aFAsW7YsSkpK4je/+U1cf/31MW3atIL35eXlsfXWW8dVV10VtWr936Xb5eXl8fOf/zymTZsWd9xxxwY7hWHFihVxzjnnRIcOHWLIkCFx3nnnRYcOHeKqq66KFStWxAknnBC5XC5Gjx4dN954Y376uVyuWvWsPP6NNU/VtSnXtjnWWRMsG9aVbQaATc3m+t1U3Rxa7ZtRLVmyJObNm1fw2hRdeOGFNV1CJW3atKnUbeWQW1X/lbVr1y5mzJgRW265Zb5bSUlJRHy9XiZMmBATJkyIpUuXxtKlS+PZZ5/Nv3/66adj1qxZcdJJJ8WMGTNiwoQJ0b9//0rvZ82aFf379y/YwCO+PnW4os348eO/yWIoMH78+Jg5c2b0798/JkyYkH9fq1at/LwsWbIkPvjgg4LpV7eelce/seapujbl2la2udRZEywb1pVtBoBNTerfTdUOur/4xS+icePG+Vfbtm2/zbrW25IlS2q6hEoaNGiwxv4NGzZcY/+K07CXLl2a77Zw4cL8+9mzZ8fs2bPznz/77LNK73fbbbd823bt2lV6HxHRvn37Kqe/cvsNpWJc7du3L3i/6nRWrbe69aw6zlV9G/NUXZtybSvbXOqsCZYN68o2A8CmJvXvpmoH3SuvvDLmzp2bf3388cffZl3rreJI56ZkwYIFa+w/f/78Nfav+A9LcXFxvltpaWn+fVlZWZSVleU/t27dutL7119/Pd92+vTpld5HREybNq3K6a/cfkOpGNe0adMK3q86nVXrrW49q45zVd/GPFXXplzbyjaXOmuCZcO6ss0AsKlJ/bup2kG3pKQkGjVqVPDaFN1+++01XUIln376aaVuuVxujf1XNn369GjZsmV88skn+W4VR65LSkqiS5cu0aVLlyguLo7i4uL43ve+l3/ft2/faN68edx3333RsmXL6NKlSzz88MOV3jdv3jwefvjhSjfxKi8vz7fZfvvtv8liKLD99ttHixYt4uGHH44uXbrk35eXl+fnpaSkJLbbbruC6Ve3npXHv7Hmqbo25dpWtrnUWRMsG9aVbQaATU3q303J3Ywq4r/vrstdu3aNiKjyrstdu3aN+fPn5++63KhRo3j//ffXetfldu3axfTp0zf6XZermpcNddfljTFP1bUp17Y51lkTLBvWlW0GgE3N5vjd9F971+UKKYbdlW2I5+i2bNkyTjvttDU+R3fVNhvauj5Hd13rqYl5qq5NubaVbS511gTLhnVlmwFgU7O5fTf91wfdiJp51FCbNm2iVatWMWvWrFiwYEHUrVs3ttpqq+jatWvUqlUrZsyYERFfX2/72muvxdy5c6NOnTqx5ZZbxuLFiyOXy0WzZs1i9913jwULFsSUKVNi8eLF0bRp02jQoEEUFRXFjjvuGF27do2JEyfG7Nmzo0mTJhERMWfOnCgrK4vOnTtX2W/Vdttvv32lW4WvWLEixo8fH7Nnz15tmw1t5WmuaV7Wt56amKfq2pRrW9nmUmdNsGxYV7YZADY1m9N3k6D7/xsxYkQ8+eST0a9fvzjvvPNquhwAAADW0wZ/ji4AAABsDgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApgi4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACApyQfdDh06FPwEAAAgbckH3Xr16hX8BAAAIG3JB10AAAD+uwi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACApAi6AAAAJEXQBQAAICmCLgAAAEkRdAEAAEiKoAsAAEBSBF0AAACSIugCAACQFEEXAACA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Ri6XiyZNmhR0v+6662KLLbaIXXbZJW688cZYvnx5zRTIGv31r3+NFi1aROfOneO8886LL774It/Pvrn5mjFjRvz5z3+OM844o1I/++Y3U7umC/i2/Oc//4kVK1ZEy5YtC7q3bNkyJkyYUENVsa7Ky8vjkksuiT333DN22GGHfPcTTzwx2rdvH23atIl//vOfMWTIkJg4cWI8+uijNVgtVenZs2eMGjUqOnfuHJ999llcc8010bt373j33Xfj888/j+Li4kp/dLVs2TI+//zzmimYanv88cdjzpw5MXDgwHw3++bmq2Kfq+p7s6Lf559/Hi1atCjoX7t27SgrK7PPbuK++uqrGDJkSJxwwgnRqFGjfPeLLroovvOd70RZWVm88sorceWVV8Znn30Ww4cPr8FqWdWBBx4YRx11VGy99dYxefLkuOqqq6Jfv34xbty4KCoqsm9uxu65555o2LBhpcu27JvfXLJBlzQMGjQo3n333YJrOiOi4JqTHXfcMVq3bh377bdfTJ48OTp27Lixy2QN+vXrl3+/0047Rc+ePaN9+/bx4IMPRr169WqwMr6p3/72t9GvX79o06ZNvpt9EzY9y5Yti2OPPTayLIsRI0YU9Lv00kvz73faaacoLi6Oc845J37xi19ESUnJxi6V1Tj++OPz73fcccfYaaedomPHjvHXv/419ttvvxqsjG/q7rvvjpNOOinq1q1b0N2++c0le+pys2bNoqioqNLdW2fMmBGtWrWqoapYFxdccEE88cQTMWbMmNhqq63W2LZnz54REfHhhx9ujNL4Bpo0aRLbbbddfPjhh9GqVatYunRpzJkzp6CN/XTTN23atHjuuefizDPPXGM7++bmo2KfW9P3ZqtWrSrd0HH58uUxe/Zs++wmqiLkTps2LZ599tmCo7lV6dmzZyxfvjymTp26cQpkvWyzzTbRrFmz/O9W++bm6W9/+1tMnDhxrd+lEfbN9ZFs0C0uLo4ePXrE888/n+9WXl4ezz//fOyxxx41WBlrk2VZXHDBBfHYY4/FCy+8EFtvvfVah3n77bcjIqJ169bfcnV8UwsWLIjJkydH69ato0ePHlGnTp2C/XTixIkxffp0++kmbuTIkdGiRYs4+OCD19jOvrn52HrrraNVq1YF++O8efPi1Vdfze+Pe+yxR8yZMyfeeOONfJsXXnghysvL8//UYNNREXInTZoUzz33XGyxxRZrHebtt9+OWrVqVToNlk3Lv//97/jiiy/yv1vtm5un3/72t9GjR4/Yeeed19rWvrnukj51+dJLL40BAwbErrvuGrvvvnvceuutsXDhwjjttNNqujTWYNCgQXH//ffHH//4x2jYsGH+2pLGjRtHvXr1YvLkyXH//ffHQQcdFFtssUX885//jMGDB8fee+8dO+20Uw1Xz6ouv/zyOPTQQ6N9+/bx6aefxtChQ6OoqChOOOGEaNy4cZxxxhlx6aWXRllZWTRq1CguvPDC2GOPPeL//b//V9Olsxrl5eUxcuTIGDBgQNSu/X9fI/bNTd+CBQsKjq5PmTIl3n777SgrK4t27drFJZdcEtdee21su+22sfXWW8fVV18dbdq0iSOOOCIiIrp27RoHHnhgnHXWWXHHHXfEsmXL4oILLojjjz++4BR2No41rc/WrVtH//79480334wnnngiVqxYkf8+LSsri+Li4hg3bly8+uqr0adPn2jYsGGMGzcuBg8eHCeffHI0bdq0pmbrv9Ka1mVZWVlcc801cfTRR0erVq1i8uTJ8f3vfz86deoUffv2jQj75qZmbb9rI77+R+JDDz0UN998c6Xh7ZsbSE3f9vnbdvvtt2ft2rXLiouLs9133z37+9//XtMlsRYRUeVr5MiRWZZl2fTp07O99947Kysry0pKSrJOnTplV1xxRTZ37tyaLZwqHXfccVnr1q2z4uLibMstt8yOO+647MMPP8z3X7x4cXb++ednTZs2zerXr58deeSR2WeffVaDFbM2Tz/9dBYR2cSJEwu62zc3fWPGjKny9+uAAQOyLPv6EUNXX3111rJly6ykpCTbb7/9Kq3nL774IjvhhBOyBg0aZI0aNcpOO+20bP78+TUwN6xpfU6ZMmW136djxozJsizL3njjjaxnz55Z48aNs7p162Zdu3bNfv7zn2dfffVVzc7Yf6E1rctFixZlBxxwQNa8efOsTp06Wfv27bOzzjor+/zzzwvGYd/cdKztd22WZdmdd96Z1atXL5szZ06l4e2bG0Yuy7LsW0/TAAAAsJEke40uAAAA/50EXQAAAJIi6AIAAJAUQRcAAICkCLoAAAAkRdAFAAAgKYIuAAAASRF0AQAASIqgC8BmK5fLxeOPP17t9sOGDYvu3bt/a/UAAJsGQReATdLnn38eF154YWyzzTZRUlISbdu2jUMPPTSef/759R7n5Zdf/o2GX52BAwdGLper9Prwww83+LQAgLWrXdMFAMCqpk6dGnvuuWc0adIkbrzxxthxxx1j2bJl8fTTT8egQYNiwoQJ6zXeBg0aRIMGDTZwtV878MADY+TIkQXdmjdvXqnd0qVLo7i4+FupAQD4miO6AGxyzj///MjlcvHaa6/F0UcfHdttt11069YtLr300vj73/++2uGGDBkS2223XdSvXz+22WabuPrqq2PZsmX5/queujxw4MA44ogj4uc//3m0bNkymjRpEj/5yU9i+fLlccUVV0RZWVlstdVWlQJsVUpKSqJVq1YFr6Kioth3333jggsuiEsuuSSaNWsWffv2jYiId999N/r16xcNGjSIli1bximnnBL/+c9/8uNbuHBhnHrqqdGgQYNo3bp13HzzzbHvvvvGJZdckm9T1anbTZo0iVGjRuU/f/zxx3HsscdGkyZNoqysLA4//PCYOnVqpWVw0003RevWrWOLLbaIQYMGFSy3JUuWxJAhQ6Jt27ZRUlISnTp1it/+9reRZVl06tQpbrrppoIa3n77bUe0AahRgi4Am5TZs2fHU089FYMGDYrS0tJK/Zs0abLaYRs2bBijRo2K8ePHxy9/+cu466674pZbblnj9F544YX49NNP46WXXorhw4fH0KFD45BDDommTZvGq6++Gueee26cc8458e9//3u95+mee+6J4uLiGDt2bNxxxx0xZ86c+O53vxu77LJL/OMf/4innnoqZsyYEccee2x+mCuuuCJefPHF+OMf/xjPPPNM/PWvf40333xznaa7bNmy6Nu3bzRs2DD+9re/xdixY6NBgwZx4IEHxtKlS/PtxowZE5MnT44xY8bEPffcE6NGjSoIy6eeemo88MADcdttt8X7778fd955ZzRo0CByuVycfvrplf4RMHLkyNh7772jU6dO67fAAOCbygBgE/Lqq69mEZE9+uija20bEdljjz222v433nhj1qNHj/znoUOHZjvvvHP+84ABA7L27dtnK1asyHfr3Llz1rt37/zn5cuXZ6WlpdkDDzyw2ukMGDAgKyoqykpLS/Ov/v37Z1mWZfvss0+2yy67FLT/6U9/mh1wwAEF3T7++OMsIrKJEydm8+fPz4qLi7MHH3ww3/+LL77I6tWrl1188cVrnP/GjRtnI0eOzLIsy+69996sc+fOWXl5eb7/kiVLsnr16mVPP/10wTJYvnx5vs0xxxyTHXfccVmWZdnEiROziMieffbZKuf9k08+yYqKirJXX301y7IsW7p0adasWbNs1KhRq11eAPBtc40uAJuULMvWe9g//OEPcdttt8XkyZNjwYIFsXz58mjUqNEah+nWrVvUqvV/Jzi1bNkydthhh/znoqKi2GKLLWLmzJlrHE+fPn1ixIgR+c8rH43u0aNHQdt33nknxowZU+X1wpMnT47FixfH0qVLo2fPnvnuZWVl0blz5zXWsKp33nknPvzww2jYsGFB96+++iomT56c/9ytW7coKirKf27dunX861//ioivT0MuKiqKffbZp8pptGnTJg4++OC4++67Y/fdd48//elPsWTJkjjmmGPWqVYA2JAEXQA2Kdtuu23kcrl1vuHUuHHj4qSTToprrrkm+vbtG40bN47f//73cfPNN69xuDp16hR8zuVyVXYrLy9f43hKS0tXe6ruqqdgL1iwIA499NC4/vrrK7Vt3bp1ta9tzeVylf4xsPK1tQsWLIgePXrEfffdV2nYlW+Utab5rVev3lrrOPPMM+OUU06JW265JUaOHBnHHXdc1K9fv1rzAADfBkEXgE1KWVlZ9O3bN37961/HRRddVCkkzpkzp8rrdF955ZVo3759/PCHP8x3mzZt2rdd7nr5zne+E4888kh06NAhateu/FXcsWPHqFOnTrz66qvRrl27iIj48ssv44MPPig4stq8efP47LPP8p8nTZoUixYtKpjOH/7wh2jRosVaj2yvzo477hjl5eXx4osvxv77719lm4MOOihKS0tjxIgR8dRTT8VLL720XtMCgA3FzagA2OT8+te/jhUrVsTuu+8ejzzySEyaNCnef//9uO2222KPPfaocphtt902pk+fHr///e9j8uTJcdttt8Vjjz22kSuvnkGDBsXs2bPjhBNOiNdffz0mT54cTz/9dJx22mmxYsWKaNCgQZxxxhlxxRVXxAsvvBDvvvtuDBw4sOAU64iI7373u/GrX/0q3nrrrfjHP/4R5557bsHR2ZNOOimaNWsWhx9+ePztb3+LKVOmxF//+te46KKLqn1zrQ4dOsSAAQPi9NNPj8cffzw/jgcffDDfpqioKAYOHBhXXnllbLvttqtdRwCwsQi6AGxyttlmm3jzzTejT58+cdlll8UOO+wQ3/ve9+L5558vuA52ZYcddlgMHjw4LrjggujevXu88sorcfXVV2/kyqunTZs2MXbs2FixYkUccMABseOOO8Yll1wSTZo0yYfZG2+8MXr37h2HHnpo7L///rHXXntVutb35ptvjrZt20bv3r3jxBNPjMsvv7zglOH69evHSy+9FO3atYujjjoqunbtGmeccUZ89dVX63SEd8SIEdG/f/84//zzo0uXLnHWWWfFwoULC9qcccYZsXTp0jjttNO+wZIBgA0jl32Tu34AABvNvvvuG927d49bb721pkup5G9/+1vst99+8fHHH0fLli1ruhwA/su5RhcAWG9LliyJWbNmxbBhw+KYY44RcgHYJDh1GQBYbw888EC0b98+5syZEzfccENNlwMAEeHUZQAAABLjiC4AAABJEXQBAABIiqALAABAUgRdAAAAkiLoAgAAkBRBFwAAgKQIugAAACRF0AUAACAp/x+bZgmsX7xyPQAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["# Calculate IQR for 'claim_frequency'\n","Q1 = claim_frequency.quantile(0.25)\n","Q3 = claim_frequency.quantile(0.75)\n","IQR = Q3 - Q1\n","\n","# Define the lower and upper bounds for outlier detection\n","lower_bound = Q1 - 1.5 * IQR\n","upper_bound = Q3 + 1.5 * IQR\n","\n","# Filter out outliers\n","filtered_data = claim_data[(claim_frequency >= lower_bound) & (claim_frequency <= upper_bound)]\n","\n","# Display the number of rows before and after outlier removal\n","rows_before = claim_data.shape[0]\n","rows_after = filtered_data.shape[0]\n","\n","rows_before, rows_after\n"],"metadata":{"id":"hNY8IMAisrCu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZINEFxeSsq_M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"rW5FRmZusq9A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"EoJfjJKDsq6p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"rWuh4Vnpsqws"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.to_csv('cleaned_data_claimfrequency.csv', index=False)"],"metadata":{"id":"vb2NCz4EiJl8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xTrFmkMkijNw"},"execution_count":null,"outputs":[]}]}